import sys
import json

class MakeGame:

    def __init__(self, clustered, maxNumOptions):
        self.clustered = clustered
        self.maxNumOptions = maxNumOptions

    def limitOptions(self):
        #print(self.clustered)
        #sys.exit(1)
        for clusterName, entries in self.clustered.items():
            for entry in entries:
                parsed = entry["parsed"]
                variables = list(filter(lambda x: "options" in x, parsed))
                variables = sorted(variables, key=lambda x: len(x["options"]))
                #variables = [len(x["options"]) for x in variables]

                keepVariables = []

                numOptions = 1
                for variable in variables:
                    numVarOptions = len(variable["options"])
                    if numOptions * numVarOptions > self.maxNumOptions:
                        break
                    numOptions *= numVarOptions
                    keepVariables.append(variable)

                entry["keepVariables"] = keepVariables
                entry["limitedOptionCount"] = numOptions


    def run(self):
        self.limitOptions()
        #print(json.dumps(self.clustered, indent=4, sort_keys=True))
        gamedata = json.dumps(self.clustered)
        print(f"var GAMEDATA = {gamedata};")


def main(maxNumOptions):
    clustered = json.loads(sys.stdin.read())
    m = MakeGame(clustered, maxNumOptions)
    m.run()

if __name__ == "__main__":
    maxNumOptions = int(sys.argv[1])
    main(maxNumOptions)