import sys
import argparse
import json

class ExtractDescription:

    ESCAPED_QUOTE = "__ESCAPED_QUOTE__"

    def __init__(self):
        self.numHits = 0
        self.numError = 0
        self.numLines = 0
        self.numSkipped = 0

    def getDescription(self, line):

        # The CSV file format uses quotes, ", to delimit fields
        # and uses two quotes, "", to escape a quote from the description
        escaped = line.replace('""', ExtractDescription.ESCAPED_QUOTE)
        parts = escaped.split('"')

        if len(parts) >= 2:
            desc = parts[1]
            return desc.replace(ExtractDescription.ESCAPED_QUOTE, '"') 
        else:
            self.numError += 1
            return None

    def getIdentifier(self, line):
        return line.split(",")[0]

    def run(self):
        # file == 0 == stdin
        with open(0, encoding="utf8", errors='ignore') as f:
            lines = f.readlines()

        entries = []
        for line in lines:
            identifier = self.getIdentifier(line)
            description = self.getDescription(line)
            if description:
                if "RESERVED" in description or "REJECT" in description or "DEPRECATED" in description:
                    self.numSkipped += 1
                else:
                    entry = {
                        "id": identifier,
                        "desc": description
                    }
                    entries.append(entry)

                    self.numHits += 1
            self.numLines += 1

        print(json.dumps(entries, sort_keys=True, indent=4))

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Extract CVE IS\'s andd escriptions')
    args = parser.parse_args()

    e = ExtractDescription()
    e.run()

    sys.stderr.write(f"Read {int(e.numLines)} lines\n")
    sys.stderr.write(f"Extracted {int(e.numHits)} descriptions\n")
    sys.stderr.write(f"Ignored {int(e.numError)} parse errors\n")
    sys.stderr.write(f"Ignored {int(e.numSkipped)} RESERVED/REJECT/DEPRECATED descriptions\n")

    ratio = e.numHits / e.numLines
    sys.stderr.write(f"descriptions/lines = {e.numHits}/{e.numLines} = {ratio}\n")


