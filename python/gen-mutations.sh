#!/usr/bin/env bash
#
# First, download and unzip allitems.csv.gz from https://cve.mitre.org/data/downloads/allitems.csv.gz
#
# This is the database of ~200k CVE's from 1999 to today.
#
# Then, run this script.
#
# Usage: ./gen-mutations.sh ~/Downloads/allitems.csv
#

ALLITEMS=$1
NUM_TOP_WORDS=100
SAMPLE_SIZE_PER_CLUSTER=10
GAME_MAX_OPTIONS=15000

echo "Extracting only 2020 CVE's"

mkdir -p data
cat $ALLITEMS | grep "^CVE-2020" > data/cve-2020.csv

LINES_2020=`cat data/cve-2020.csv | wc -l `
echo "Created data/cve-2020.csv"
echo "$LINES_2020 CVE's"
echo

echo "Extracting CVE identifiers and descriptions into json."
echo "Also dropping CVE's we want to ignore, such as CVE's containing the string 'RESERVED'."
cat data/cve-2020.csv | python3 extract_id_desc.py > data/cve-2020.json
echo

echo "Clustering CVE's based upon, cluster/2020-clusters.json, which was pre-generated."
echo "clusterName to clusterSize map:"
cat data/cve-2020.json | python3 cluster.py cluster/2020-clusters.json > data/cve-2020-clustered.json
echo

echo "Finding the most common words for each cluster."
cat data/cve-2020-clustered.json | python3 get_top_words.py $NUM_TOP_WORDS > data/cve-2020-clustered-top-$NUM_TOP_WORDS.json
echo

echo "Parsing the CVE's."
cat data/cve-2020-clustered-top-$NUM_TOP_WORDS.json | python3 parse_desc.py > data/cve-2020-clustered-top-$NUM_TOP_WORDS-parsed.json
echo

echo "Building a model for each cluster."
cat data/cve-2020-clustered-top-$NUM_TOP_WORDS-parsed.json | python3 learn_models.py > data/cve-2020-clustered-top-$NUM_TOP_WORDS-parsed-models.json
echo

echo "Mutating each CVE."
cat data/cve-2020-clustered-top-$NUM_TOP_WORDS-parsed-models.json | python3 gen_mutations.py > data/cve-2020-clustered-top-$NUM_TOP_WORDS-parsed-models-mutations.json
echo

echo "Taking a sample from each cluster."
cat data/cve-2020-clustered-top-$NUM_TOP_WORDS-parsed-models-mutations.json | python3 sample_clusters.py $SAMPLE_SIZE_PER_CLUSTER > data/cve-2020-clustered-top-$NUM_TOP_WORDS-parsed-models-mutations-sample-$SAMPLE_SIZE_PER_CLUSTER.json
echo

echo "Making the web game from the samples."
cat data/cve-2020-clustered-top-$NUM_TOP_WORDS-parsed-models-mutations-sample-$SAMPLE_SIZE_PER_CLUSTER.json | python3 make_game.py $GAME_MAX_OPTIONS > ../js/gamedata/gamedata.js
echo

echo "Done!"